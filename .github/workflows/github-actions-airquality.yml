name: docker-github-airquality

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: docker build if docker file changed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v9.3
      
      - name: Get changed files using a comma separator
        id: changed-files-comma
        uses: tj-actions/changed-files@v9.3
        with:
          separator: ","

      - name: Get changed action file
        id: changed-files-specific
        uses: tj-actions/changed-files@v9.3
        with:  # UPDATE
          files: |
            github-actions-airquality.yml

      - name: Run step if any of the listed files above change    # UPDATE
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          STATIC_RENDER_MINIMIZE: ${{secrets.STATIC_RENDER_MINIMIZE}}
        run: |
          RELEASEVERSION=4.7

          # RELEASEVERSION=$(cat version.txt) 
          # https://github.community/t/wanting-to-add-a-build-date-and-time-to-my-github-action/220185/6'
          #
          RELEASEDATE1=$(date +"%m/%d/%YT%H:%M:%S%p")
          RELEASEDATE=$(TZ=":US/Pacific" date +%c)
          # https://unix.stackexchange.com/questions/164826/date-command-iso-8601-option
          RELEASEDATEISO=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          #
          # removes any previous lines that might have contained VERSION or DATE (not tested)
          perl -ni -e 'next if /^RELEASE(?:VERSION|DATE)=/;print' .env.production
          # record in `.env.production`
          (
          echo "RELEASEVERSION=$RELEASEVERSION"
          echo "RELEASEDATE=$RELEASEDATE"
          echo "RELEASEDATEISO=$RELEASEDATEISO"
          ) >> .env.production
          echo "Docker m4final changed so building then pushing..."
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker build . --file Dockerfile --tag pkellner/m4final:latest --tag pkellner/m4final:$RELEASEVERSION
          docker push pkellner/m4final --all-tags
